From c6226cc551034c52d61b464cce0b6cc2654d760c Mon Sep 17 00:00:00 2001
From: Paul Lockaby <plockaby@uw.edu>
Date: Thu, 6 Jun 2019 13:39:06 -0700
Subject: [PATCH] ssl: py3.6 using client certificates raised ValueError:
 check_hostname needs server_hostname argument

https://github.com/eventlet/eventlet/issues/567
https://github.com/eventlet/eventlet/pull/575
---
 eventlet/green/ssl.py |  2 +-
 tests/ssl_test.py     | 24 ++++++++++++++++++++++++
 2 files changed, 25 insertions(+), 1 deletion(-)

diff --git a/eventlet/green/ssl.py b/eventlet/green/ssl.py
index 552afc8..abe8046 100644
--- a/eventlet/green/ssl.py
+++ b/eventlet/green/ssl.py
@@ -353,7 +353,7 @@ class GreenSSLSocket(_original_sslsocket):
                 sslobj = self._context._wrap_socket(self._sock, server_side, ssl_sock=self)
             else:
                 context = self.context if PY33 else self._context
-                sslobj = context._wrap_socket(self, server_side)
+                sslobj = context._wrap_socket(self, server_side, server_hostname=self.server_hostname)
         else:
             sslobj = sslwrap(self._sock, server_side, self.keyfile, self.certfile,
                              self.cert_reqs, self.ssl_version,
diff --git a/tests/ssl_test.py b/tests/ssl_test.py
index d8b7d7e..231f027 100644
--- a/tests/ssl_test.py
+++ b/tests/ssl_test.py
@@ -1,5 +1,6 @@
 import contextlib
 import socket
+import sys
 import warnings
 
 import eventlet
@@ -303,3 +304,26 @@ class SSLTest(tests.LimitedTestCase):
                 server_to_client.close()
 
                 listener.close()
+
+    def test_client_check_hostname(self):
+        # stdlib API compatibility
+        # https://github.com/eventlet/eventlet/issues/567
+        def serve(listener):
+            sock, addr = listener.accept()
+            sock.recv(64)
+            sock.sendall(b"response")
+            sock.close()
+
+        listener = listen_ssl_socket()
+        server_coro = eventlet.spawn(serve, listener)
+        ctx = ssl.create_default_context()
+        ctx.verify_mode = ssl.CERT_REQUIRED
+        ctx.check_hostname = True
+        ctx.load_verify_locations(tests.certificate_file)
+        ctx.load_cert_chain(tests.certificate_file, tests.private_key_file)
+        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
+        client = ctx.wrap_socket(sock, server_hostname="Test")
+        client.connect(listener.getsockname())
+        client.send(b"check_hostname works")
+        client.recv(64)
+        server_coro.wait()
-- 
2.26.2

